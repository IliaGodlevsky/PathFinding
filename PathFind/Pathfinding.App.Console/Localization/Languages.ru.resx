<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlgorithmChoiceMsg" xml:space="preserve">
    <value>Выберите алгоритм: </value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Выбрать все</value>
  </data>
  <data name="ApplyHistory" xml:space="preserve">
    <value>Применить историю</value>
  </data>
  <data name="ApplyHistoryMsg" xml:space="preserve">
    <value>Применить историю {0}?: </value>
  </data>
  <data name="ApplyStatistics" xml:space="preserve">
    <value>Применить статистику</value>
  </data>
  <data name="ApplyStatisticsMsg" xml:space="preserve">
    <value>Применить статистику {0}?: </value>
  </data>
  <data name="ApplyVisualization" xml:space="preserve">
    <value>Применить визуализацию</value>
  </data>
  <data name="ApplyVisualizationMsg" xml:space="preserve">
    <value>Применить реализацию {0}?: </value>
  </data>
  <data name="AssembleGraph" xml:space="preserve">
    <value>Собрать граф</value>
  </data>
  <data name="BadInputMsg" xml:space="preserve">
    <value>Неверный ввод. Попробуйте еще: </value>
  </data>
  <data name="Black" xml:space="preserve">
    <value>Черный</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Синий</value>
  </data>
  <data name="ChangeCost" xml:space="preserve">
    <value>Поменять стоимость</value>
  </data>
  <data name="ChangeGraphColors" xml:space="preserve">
    <value>Поменять цвета графа</value>
  </data>
  <data name="ChangePathColors" xml:space="preserve">
    <value>Поменять цвета пути</value>
  </data>
  <data name="ChangePathfindingColors" xml:space="preserve">
    <value>Поменять цвета поиска пути</value>
  </data>
  <data name="ChangeRangeColors" xml:space="preserve">
    <value>Поменять цвета диапазона поиска</value>
  </data>
  <data name="ChooseColor" xml:space="preserve">
    <value>Выберите цвет: </value>
  </data>
  <data name="ChooseGraph" xml:space="preserve">
    <value>Выбрать граф</value>
  </data>
  <data name="ClearColors" xml:space="preserve">
    <value>Очистить цвета вершин</value>
  </data>
  <data name="ClearGraph" xml:space="preserve">
    <value>Очистить граф</value>
  </data>
  <data name="ClearHistory" xml:space="preserve">
    <value>Очистить историю</value>
  </data>
  <data name="ClearPathfindingRange" xml:space="preserve">
    <value>Очистить даипазон пути</value>
  </data>
  <data name="ColorsUnitMenuItem" xml:space="preserve">
    <value>Цвета</value>
  </data>
  <data name="CrossedPathColor" xml:space="preserve">
    <value>Цвет пересечения путей</value>
  </data>
  <data name="CustomSmoothLevel" xml:space="preserve">
    <value>Пользовательский</value>
  </data>
  <data name="Cyan" xml:space="preserve">
    <value>Голубой</value>
  </data>
  <data name="DarkBlue" xml:space="preserve">
    <value>Темно-синий</value>
  </data>
  <data name="DarkCyan" xml:space="preserve">
    <value>Темно-голубой</value>
  </data>
  <data name="DarkGray" xml:space="preserve">
    <value>Темно-серый</value>
  </data>
  <data name="DarkGreen" xml:space="preserve">
    <value>Темно-зеленый</value>
  </data>
  <data name="DarkMagenta" xml:space="preserve">
    <value>Темно-пурпурный</value>
  </data>
  <data name="DarkRed" xml:space="preserve">
    <value>Темно-красный</value>
  </data>
  <data name="DarkYellow" xml:space="preserve">
    <value>Темно-желтый</value>
  </data>
  <data name="DelayTimeInputMsg" xml:space="preserve">
    <value>Введите задержку аниманции (миллисекунды): </value>
  </data>
  <data name="Editor" xml:space="preserve">
    <value>Редактор</value>
  </data>
  <data name="EnqueuedColor" xml:space="preserve">
    <value>Цвет очередной вершины</value>
  </data>
  <data name="EnterAnimationDelay" xml:space="preserve">
    <value>Ввод задержки анимации</value>
  </data>
  <data name="EnterPathfindingRange" xml:space="preserve">
    <value>Ввод диапазона поиска пути</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Выйти</value>
  </data>
  <data name="ExitMsg" xml:space="preserve">
    <value>Вы хотите выйти {0}?: </value>
  </data>
  <data name="FindPath" xml:space="preserve">
    <value>Поиск пути</value>
  </data>
  <data name="Graph" xml:space="preserve">
    <value>Граф</value>
  </data>
  <data name="GraphFormat" xml:space="preserve">
    <value>Процент препятствий: {0} ({1}/{2})</value>
  </data>
  <data name="GraphHeightInputMsg" xml:space="preserve">
    <value>Введите длину графа: </value>
  </data>
  <data name="GraphWidthInputMsg" xml:space="preserve">
    <value>Введите ширину графа: </value>
  </data>
  <data name="Gray" xml:space="preserve">
    <value>Серый</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Зеленый</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>История поиска пути</value>
  </data>
  <data name="InputCostRange" xml:space="preserve">
    <value>Ввод диапазона цен</value>
  </data>
  <data name="InputGraphParametres" xml:space="preserve">
    <value>Ввод параметров графа</value>
  </data>
  <data name="InputHostName" xml:space="preserve">
    <value>Введите имя хоста: </value>
  </data>
  <data name="InputObstaclePercent" xml:space="preserve">
    <value>Ввод процента препятствий</value>
  </data>
  <data name="InputPathMsg" xml:space="preserve">
    <value>Введите путь: </value>
  </data>
  <data name="InputPort" xml:space="preserve">
    <value>Введите порт: </value>
  </data>
  <data name="InputServerNameMsg" xml:space="preserve">
    <value>Введите имя сервера: </value>
  </data>
  <data name="KeysUnit" xml:space="preserve">
    <value>Клавиши</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Язык</value>
  </data>
  <data name="LanguageMsg" xml:space="preserve">
    <value>Выберите язык: </value>
  </data>
  <data name="LengthDimensionName" xml:space="preserve">
    <value>Длина</value>
  </data>
  <data name="LoadGraph" xml:space="preserve">
    <value>Загрузить граф</value>
  </data>
  <data name="Magenta" xml:space="preserve">
    <value>Пурпурный</value>
  </data>
  <data name="MenuOptionChoiceMsg" xml:space="preserve">
    <value>Выберите пункт меню: </value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="ObstacleColor" xml:space="preserve">
    <value>Цвет препятсвия</value>
  </data>
  <data name="ObstaclePercentInputMsg" xml:space="preserve">
    <value>Введите процент препятствий: </value>
  </data>
  <data name="OutOfRangeMsg" xml:space="preserve">
    <value>Значение за пределами диапазона. Попробуйте еще: </value>
  </data>
  <data name="PathColor" xml:space="preserve">
    <value>Цвет пути</value>
  </data>
  <data name="Pathfinding" xml:space="preserve">
    <value>Поиск пути</value>
  </data>
  <data name="PathfindingRange" xml:space="preserve">
    <value>Диапазон поиска пути</value>
  </data>
  <data name="PathfindingResultFormat" xml:space="preserve">
    <value>{0} Шаги: {1} Стоимость: {2}</value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>Выйти</value>
  </data>
  <data name="RangeLowerValueInputMsg" xml:space="preserve">
    <value>Введите нижнее значение диапазона: </value>
  </data>
  <data name="RangeUpperValueInputMsg" xml:space="preserve">
    <value>Введите верхнее значение диапазона: </value>
  </data>
  <data name="RecieveGraph" xml:space="preserve">
    <value>Принять граф</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Красный</value>
  </data>
  <data name="RegularColor" xml:space="preserve">
    <value>Обычный цвет</value>
  </data>
  <data name="ResizeGraph" xml:space="preserve">
    <value>Изменить размер графа</value>
  </data>
  <data name="ReverseVertices" xml:space="preserve">
    <value>Перевернуть вершины</value>
  </data>
  <data name="SaveGraph" xml:space="preserve">
    <value>Сохранить граф</value>
  </data>
  <data name="SendGraph" xml:space="preserve">
    <value>Отправить граф</value>
  </data>
  <data name="ShowHistory" xml:space="preserve">
    <value>Показать историю</value>
  </data>
  <data name="SmoothGraphItem" xml:space="preserve">
    <value>Выровнять граф</value>
  </data>
  <data name="SourceColor" xml:space="preserve">
    <value>Цвет источника</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Статистика поиска пути</value>
  </data>
  <data name="StatisticsFormat" xml:space="preserve">
    <value>{0}  Время: {1}     Посещенные: {2}</value>
  </data>
  <data name="TargetColor" xml:space="preserve">
    <value>Цвет цели</value>
  </data>
  <data name="TransitColor" xml:space="preserve">
    <value>Цвет транзитной вершины</value>
  </data>
  <data name="VisitedColor" xml:space="preserve">
    <value>Цвет посещенной вершины</value>
  </data>
  <data name="Visual" xml:space="preserve">
    <value>Визуализация поиска пути</value>
  </data>
  <data name="WaitingForConnection" xml:space="preserve">
    <value>Ожидание соединения...</value>
  </data>
  <data name="White" xml:space="preserve">
    <value>Белый</value>
  </data>
  <data name="WidthDimensionName" xml:space="preserve">
    <value>Ширина</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Желтый</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Да</value>
  </data>
</root>